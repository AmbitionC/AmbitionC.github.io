{"version":3,"sources":["components/alert.jsx","components/icons.jsx","components/entryTitle.jsx","components/entryText.jsx","containers/page.jsx","serviceWorker.js","index.js"],"names":["Alert","Fragment","className","Component","Icons","user","t","viewBox","version","xmlns","p-id","width","height","type","d","fill","users","time","EntryTitle","EntryText","Page","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mNAgBeA,E,uKAZX,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKC,UAAU,cACZ,kFAEH,wBAAIA,UAAU,iB,GAPFC,aCqBLC,E,uKAnBX,IAAMC,EAAO,yBAAKC,EAAE,gBAAgBJ,UAAU,YAAYK,QAAQ,gBAAgBC,QAAQ,MAAMC,MAAM,6BAA6BC,OAAK,OAAOC,MAAM,KAAKC,OAAO,MAAK,8BAAM,2BAAOC,KAAK,cAA0B,0BAAMC,EAAE,4rBAA4rBJ,OAAK,OAAOK,KAAK,aACj6BC,EAAQ,yBAAKV,EAAE,gBAAgBJ,UAAU,aAAaK,QAAQ,gBAAgBC,QAAQ,MAAMC,MAAM,6BAA6BC,OAAK,QAAQC,MAAM,KAAKC,OAAO,MAAK,8BAAM,2BAAOC,KAAK,cAA0B,0BAAMC,EAAE,mhBAAmhBJ,OAAK,QAAQK,KAAK,aAC5vBE,EAAO,yBAAKX,EAAE,gBAAgBJ,UAAU,YAAYK,QAAQ,gBAAgBC,QAAQ,MAAMG,MAAM,OAAOC,OAAO,QAAO,8BAAM,2BAAOC,KAAK,cAA0B,0BAAMC,EAAE,qfAAqfC,KAAK,UAAUL,OAAK,UAAe,0BAAMI,EAAE,uKAAuKC,KAAK,UAAUL,OAAK,UAAe,0BAAMI,EAAE,uFAAuFC,KAAK,UAAUL,OAAK,WAC5gC,OACE,kBAAC,IAAMT,SAAP,KACE,yBAAKC,UAAU,iBACZG,GAEH,yBAAKH,UAAU,kBACZc,GAEH,yBAAKd,UAAU,iBACZe,Q,GAdSd,aCkBLe,E,uKAhBX,OACE,yBAAKhB,UAAU,eACb,yBAAKA,UAAU,mBACZ,4BAEH,yBAAKA,UAAU,qBACZ,4BAEH,yBAAKA,UAAU,qBACZ,iC,GAXcC,aCkBVgB,E,uKAhBX,OACE,kBAAC,IAAMlB,SAAP,KACE,yBAAKC,UAAU,kBACZ,gBAEH,yBAAKA,UAAU,oBACZ,8CAEH,yBAAKA,UAAU,oBACZ,4B,GAXaC,aCkBTiB,E,uKAXX,OACE,yBAAKlB,UAAU,gBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GARWC,aCMCkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e123dc8c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Alert extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"alter-text\">\n          {\"研究生用户，出校授权有效！\"}\n        </div>\n        <hr className=\"hr-line\" />\n      </React.Fragment>\n      \n    )\n  }\n}\n\nexport default Alert;","import React, { Component } from 'react';\n\nclass Icons extends Component {\n  render() {\n    const user = <svg t=\"1591258281926\" className=\"user-icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"2595\" width=\"4%\" height=\"4%\"><defs><style type=\"text/css\"></style></defs><path d=\"M502.178909 38.632727c-131.072 0-237.521455 104.168727-237.521454 232.727273s106.402909 232.727273 237.521454 232.727273c131.165091 0 237.568-104.168727 237.568-232.727273s-106.309818-232.727273-237.568-232.727273z m0 0c-131.072 0-237.521455 104.168727-237.521454 232.727273s106.402909 232.727273 237.521454 232.727273c131.165091 0 237.568-104.168727 237.568-232.727273s-106.309818-232.727273-237.568-232.727273zM413.184 581.678545c-169.472 0-306.874182 134.609455-306.874182 300.590546v19.316364c0 67.909818 137.402182 67.956364 306.874182 67.956363h197.957818c169.425455 0 306.781091-2.513455 306.781091-67.956363v-19.316364c0-165.981091-137.355636-300.590545-306.781091-300.590546H413.184z m0 0\" p-id=\"2596\" fill=\"#707070\"></path></svg>\n    const users = <svg t=\"1591258637711\" className=\"users-icon\" viewBox=\"0 0 1280 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12622\" width=\"4%\" height=\"4%\"><defs><style type=\"text/css\"></style></defs><path d=\"M384 512c123.8 0 224-100.2 224-224S507.8 64 384 64 160 164.2 160 288s100.2 224 224 224z m153.6 64h-16.6c-41.6 20-87.8 32-137 32s-95.2-12-137-32h-16.6C103.2 576 0 679.2 0 806.4V864c0 53 43 96 96 96h576c53 0 96-43 96-96v-57.6c0-127.2-103.2-230.4-230.4-230.4zM960 512c106 0 192-86 192-192s-86-192-192-192-192 86-192 192 86 192 192 192z m96 64h-7.6c-27.8 9.6-57.2 16-88.4 16s-60.6-6.4-88.4-16H864c-40.8 0-78.4 11.8-111.4 30.8 48.8 52.6 79.4 122.4 79.4 199.6v76.8c0 4.4-1 8.6-1.2 12.8H1184c53 0 96-43 96-96 0-123.8-100.2-224-224-224z\" p-id=\"12623\" fill=\"#707070\"></path></svg>\n    const time = <svg t=\"1591258767066\" className=\"time-icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" width=\"4.5%\" height=\"4.5%\"><defs><style type=\"text/css\"></style></defs><path d=\"M508.928 891.904c-179.712 0-326.144-146.432-326.144-326.144s146.432-326.144 326.144-326.144 326.144 146.432 326.144 326.144-146.432 326.144-326.144 326.144z m0-596.992c-149.504 0-270.848 121.344-270.848 270.848s121.344 270.848 270.848 270.848 270.848-121.344 270.848-270.848c0.512-148.992-121.344-270.848-270.848-270.848zM604.672 179.712H413.184c-14.336 0-26.112-11.776-26.112-26.112s11.776-26.112 26.112-26.112h191.488c14.336 0 26.112 11.776 26.112 26.112 0.512 14.336-11.264 26.112-26.112 26.112z\" fill=\"#707070\" p-id=\"19720\"></path><path d=\"M482.816 577.024V385.536c0-14.336 11.776-26.112 26.112-26.112s26.112 11.776 26.112 26.112v191.488c0 14.336-11.776 26.112-26.112 26.112s-26.112-11.776-26.112-26.112z\" fill=\"#707070\" p-id=\"19721\"></path><path d=\"M710.656 304.64m-35.328 0a35.328 35.328 0 1 0 70.656 0 35.328 35.328 0 1 0-70.656 0Z\" fill=\"#707070\" p-id=\"19722\"></path></svg>;\n    return (\n      <React.Fragment>\n        <div className=\"user-icon-div\">\n          {user}  \n        </div>\n        <div className=\"users-icon-div\">\n          {users}  \n        </div>\n        <div className=\"time-icon-div\">\n          {time}  \n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Icons","import React, { Component } from 'react';\n\nclass EntryTitle extends Component {\n  render() {\n    return (\n      <div className=\"entry-title\">\n        <div className=\"title-user-name\">\n          {\"用户姓名\"}\n        </div>\n        <div className=\"title-assign-type\">\n          {\"登记类型\"}\n        </div>\n        <div className=\"title-assign-time\">\n          {\"登记时间\"}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default EntryTitle;","import React, { Component } from 'react';\n\nclass EntryText extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"text-user-name\">\n          {\"陈昊\"}\n        </div>\n        <div className=\"text-assign-type\">\n          {\"研究生（硕士）\"}\n        </div>\n        <div className=\"text-assign-time\">\n          {\"2020-06-04 16:59:39\"}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default EntryText;","import React, { Component } from 'react';\nimport Alert from '../components/alert.jsx';\nimport Icons from '../components/icons.jsx';\nimport EntryTitle from '../components/entryTitle.jsx';\nimport EntryText from '../components/entryText.jsx';\n\nclass Page extends Component {\n  \n  render() {\n    return (\n      <div className=\"page-content\">\n        <Alert />\n        <Icons />\n        <EntryTitle />\n        <EntryText />\n      </div>\n    )\n  }\n}\n\nexport default Page;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Page from './containers/page.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Page />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}